[env:heltec_wifi_lora_32_v3]
platform = espressif32
board = esp32dev              ; générique, on force ensuite le "profil Heltec V3"
framework = arduino

lib_deps =
  heltecautomation/Heltec ESP32 Dev-Boards @ 2.1.5

; >>> IMPORTANT : forcer le profil Heltec V3 pour que la lib définisse HELTEC_BOARD & SLOW_CLK_TPYE
build_flags =
  -DARDUINO_heltec_wifi_lora_32_V3
  -DREGION_EU868

; Moniteur série
monitor_speed = 115200
upload_speed = 921600
monitor_filters = colorize, time, send_on_enter
monitor_eol = LF         ; IMPORTANT (mets LF)
monitor_echo = yes       ; pour voir ce que TU tapes

; pip install platformio
; pio run -d composants/heltec_wifi_lora_32_v3/code/LoRaSender
; pio run -d composants/heltec_wifi_lora_32_v3/code/LoRaReceiver
; pio device monitor -b 115200 -p <PORT>

; platformio ne fonctionne pas avec les cartes Heltec, procédure pour faire autrement en VSCode
; Construire avec l’IDE Arduino (ou Arduino-CLI) dans CI pour les sketches Heltec
; Tu laisses les dossiers PlatformIO, mais les exemples qui utilisent LoRaWan_APP.h sont buildés via Arduino-CLI (qui installe le core Heltec).
; Ajoute un job GitHub Actions “Arduino-CLI build” :
; Installe Arduino-CLI.
; arduino-cli core update-index
; arduino-cli core install esp32:esp32 (ou core Heltec si nécessaire via l’URL index Heltec)
; Surtout : ajoute l’URL Heltec dans arduino-cli config init puis board_manager.additional_urls = https://resource.heltec.cn/download/package_heltec_esp32_index.json.
; arduino-cli core install heltec:esp32 (nom exact selon index).
; arduino-cli lib install "Heltec ESP32 Dev-Boards"
; Build :
; arduino-cli compile --fqbn esp32:esp32:heltec_wifi_lora_32_V3 \
;   --build-property "compiler.cpp.extra_flags=-DLORAWAN_REGION=EU868 -DSLOW_CLK_TPYE=0" \
;   composants/heltec_wifi_lora_32_v3/code/LoRaSender
